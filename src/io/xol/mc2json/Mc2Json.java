package io.xol.mc2json;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.List;

import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

public class Mc2Json {

	public static List<int[]> cubes = new ArrayList<int[]>();
	
	@SuppressWarnings("deprecation")
	public static void exec(CommandSender sender, Command cmd, String[] args) {
		try{
			Player player = (Player)sender;
			cubes.clear();
			File file = new File("osef.json");
			if(!file.exists())
				file.createNewFile();
			Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file), "UTF-8"));
			out.write("{\n");
			out.write("    \"__comment\": \"File generated by Mc2Json, copyright XolioWare Interactive 2014\",\n");
			//out.write("\n");
			
			int widthx = Integer.parseInt(args[0]);
			int widthz = Integer.parseInt(args[1]);
			int height = Integer.parseInt(args[2]);
			
			int multiplier = Integer.parseInt(args[3]);
			
			int posX = player.getLocation().getBlockX();
			int posY = player.getLocation().getBlockY();
			int posZ = player.getLocation().getBlockZ()-2;
			
			int cx = Integer.parseInt(args[4]);
			int cy = Integer.parseInt(args[5]);
			int cz = Integer.parseInt(args[6]);
			
			out.write("    \"elements\": [\n");
			
			for(int x = posX-widthx/2; x < posX+widthx/2; x++)
			{
				cy = Integer.parseInt(args[5]);
				for(int y = posY; y < posY+height; y++)
				{
					cz = Integer.parseInt(args[6]);
					for(int z = posZ-widthz/2; z < posZ+widthz/2; z++)
					{
						if(player.getWorld().getBlockTypeIdAt(x, y, z) != 0)
							addCube(cx,cy,cz,player.getWorld().getBlockTypeIdAt(x, y, z));
						cz++;
					}
					cy++;
				}
				cx++;
			}
			
			for(int i = 0; i < cubes.size(); i ++)
			{
				int[] coords = cubes.get(i);
				out.write("        {   \"from\": [ "+coords[0]*multiplier+", "+coords[1]*multiplier+", "+coords[2]*multiplier+" ],\n");
				out.write("            \"to\": [ "+(coords[0]+1)*multiplier+", "+(coords[1]+1)*multiplier+", "+(coords[2]+1)*multiplier+" ],\n");
				out.write("            \"faces\": {\n");
				
				String texture = "id"+coords[3];
				/*if(coords[3] == 35)
					texture = "test1";
				if(coords[3] == 45)
					texture = "test2";
				if(coords[3] == 155)
					texture = "test3";*/
				
				out.write("                \"down\":  { \"texture\": \""+texture+"\" },\n");
				out.write("                \"up\":  { \"texture\": \""+texture+"\" },\n");
				out.write("                \"north\":  { \"texture\": \""+texture+"\" },\n");
				out.write("                \"south\":  { \"texture\": \""+texture+"\" },\n");
				out.write("                \"east\":  { \"texture\": \""+texture+"\" },\n");
				out.write("                \"west\":  { \"texture\": \""+texture+"\" }\n");
				out.write("            }\n");
				out.write("        }"+(i == cubes.size()-1 ? "" : ",")+"\n");
			}
			
			out.write("    ],\n");
			out.write("    \"textures\": {\n");
			out.write("        \"test\": \"blocks/stone\"\n");
			out.write("        \"test1\": \"blocks/wool_colored_pink\"\n");
			out.write("        \"test2\": \"blocks/hardened_clay_stained_white\"\n");
			out.write("        \"test3\": \"blocks/snow\"\n");
			
			out.write("    }\n");
			out.write("}\n");
			out.close();
		}
		catch(Exception e)
		{
			sender.sendMessage("error "+e.getMessage());
			sender.sendMessage("syntax: /mc2json widthx widthz height multiplier decalx decaly decalz");
		}
	}

	private static void addCube(int cx, int cy, int cz, int id) {
		//if(cx < 32 && cy < 32 && cz < 32)
			cubes.add(new int[]{cx,cy,cz,id});
	}

}
